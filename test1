-- Assuming you are working with a Roblox-like game or any 3D environment
local player = game.Players.LocalPlayer
local mouse = player:GetMouse() -- Gets the player's mouse object
local camera = game.Workspace.CurrentCamera

-- Function to get the player's head position
function getPlayerHeadPosition(targetPlayer)
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Head") then
        return targetPlayer.Character.Head.Position
    end
    return nil
end

-- Function to calculate the angle between two points (from the player's camera to the target's head)
function calculateAimAngle(fromPosition, toPosition)
    local direction = (toPosition - fromPosition).unit
    local angleX = math.atan2(direction.Y, direction.Z)
    local angleY = math.atan2(direction.X, direction.Z)
    return angleX, angleY
end

-- Function to lock on to the target's head
function aimAtHead(targetPlayer)
    local headPos = getPlayerHeadPosition(targetPlayer)
    if headPos then
        -- Get the player's position and the camera's position
        local playerPos = player.Character.HumanoidRootPart.Position
        local cameraPos = camera.CFrame.Position
        
        -- Calculate the angle to aim at the head
        local angleX, angleY = calculateAimAngle(cameraPos, headPos)

        -- Apply the calculated angles to the camera's orientation (example)
        -- In Roblox, the camera orientation would typically be set via the CameraSubject or CFrame
        -- For simplicity, we're assuming this is done via CFrame manipulation
        camera.CFrame = CFrame.new(cameraPos, headPos)  -- Smooth aiming can be added here
    end
end

-- Example: Targeting the nearest player
game:GetService("RunService").Heartbeat:Connect(function()
    local nearestPlayer = nil
    local shortestDistance = math.huge

    -- Find the nearest player (excluding the local player)
    for _, targetPlayer in ipairs(game.Players:GetPlayers()) do
        if targetPlayer ~= player and targetPlayer.Character then
            local headPos = getPlayerHeadPosition(targetPlayer)
            if headPos then
                local distance = (player.Character.HumanoidRootPart.Position - headPos).magnitude
                if distance < shortestDistance then
                    nearestPlayer = targetPlayer
                    shortestDistance = distance
                end
            end
        end
    end
    
    -- If a player is found, aim at their head
    if nearestPlayer then
        aimAtHead(nearestPlayer)
    end
end)
