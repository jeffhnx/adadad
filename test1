-- Define variables for ESP, aimbot, team check, and GUI visibility
local espEnabled = false
local aimbotEnabled = false
local teamCheckEnabled = false
local guiVisible = false
local targetPlayer = nil
local refreshRate = 1 -- refresh every second for ESP
local aimbotStrength = 0.1 -- Default strength; lower is smoother

-- Create the GUI container
local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local EspToggle = Instance.new("TextButton")
local AimbotToggle = Instance.new("TextButton")
local TeamCheckToggle = Instance.new("TextButton")  -- New button for team check
local AimbotStrengthLabel = Instance.new("TextLabel")
local SliderBar = Instance.new("Frame")
local SliderHandle = Instance.new("Frame")

-- Configure the main GUI frame
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
MainFrame.Size = UDim2.new(0, 200, 0, 350)  -- Adjusted height to fit the new button
MainFrame.Position = UDim2.new(0.5, -100, 0.5, -150)
MainFrame.Visible = guiVisible
MainFrame.Parent = ScreenGui

-- Configure ESP toggle button
EspToggle.Size = UDim2.new(0, 180, 0, 40)
EspToggle.Position = UDim2.new(0, 10, 0, 20)
EspToggle.Text = "Toggle ESP (Off)"
EspToggle.Parent = MainFrame

-- Configure Aimbot toggle button
AimbotToggle.Size = UDim2.new(0, 180, 0, 40)
AimbotToggle.Position = UDim2.new(0, 10, 0, 80)
AimbotToggle.Text = "Toggle Aimbot (Off)"
AimbotToggle.Parent = MainFrame

-- Configure Team Check toggle button (new)
TeamCheckToggle.Size = UDim2.new(0, 180, 0, 40)
TeamCheckToggle.Position = UDim2.new(0, 10, 0, 140)
TeamCheckToggle.Text = "Team Check (Off)"
TeamCheckToggle.Parent = MainFrame

-- Configure Aimbot Strength Label
AimbotStrengthLabel.Size = UDim2.new(0, 180, 0, 20)
AimbotStrengthLabel.Position = UDim2.new(0, 10, 0, 200)
AimbotStrengthLabel.Text = "Aimbot Strength: 0.1"
AimbotStrengthLabel.TextColor3 = Color3.new(1, 1, 1)
AimbotStrengthLabel.Parent = MainFrame

-- Configure the Slider Bar
SliderBar.Size = UDim2.new(0, 180, 0, 10)
SliderBar.Position = UDim2.new(0, 10, 0, 230)
SliderBar.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
SliderBar.Parent = MainFrame

-- Configure the Slider Handle
SliderHandle.Size = UDim2.new(0, 10, 0, 20)
SliderHandle.Position = UDim2.new(0.1, -5, 0, 225)
SliderHandle.BackgroundColor3 = Color3.new(1, 0, 0)
SliderHandle.Parent = MainFrame
SliderHandle.ZIndex = 2

-- Right-shift to show/hide GUI
local UserInputService = game:GetService("UserInputService")
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.RightShift then
        guiVisible = not guiVisible
        MainFrame.Visible = guiVisible
    end
end)

-- Update aimbot strength based on slider position
local function updateAimbotStrength()
    local relativePosition = (SliderHandle.Position.X.Offset - SliderBar.Position.X.Offset) / SliderBar.AbsoluteSize.X
    aimbotStrength = math.clamp(relativePosition, 0.1, 1)  -- Clamp values between 0.1 and 1
    AimbotStrengthLabel.Text = string.format("Aimbot Strength: %.2f", aimbotStrength)
end

-- Make the slider handle draggable
local dragging = false

SliderHandle.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local mouseX = input.Position.X
        local sliderBarX = SliderBar.AbsolutePosition.X
        local sliderBarWidth = SliderBar.AbsoluteSize.X
        
        -- Calculate the new position for the handle within the slider bar bounds
        local newHandleX = math.clamp(mouseX - sliderBarX, 0, sliderBarWidth)
        SliderHandle.Position = UDim2.new(0, newHandleX, 0, 225)
        
        -- Update the aimbot strength based on the new slider position
        updateAimbotStrength()
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

-- ESP function to highlight players
local function highlightPlayers()
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer and player.Character then
            -- If Team Check is enabled, only highlight players from different teams
            if teamCheckEnabled and player.Team ~= game.Players.LocalPlayer.Team then
                -- Check for existing highlight
                local highlight = player.Character:FindFirstChild("ESPHighlight")
                if not highlight then
                    highlight = Instance.new("Highlight")
                    highlight.Name = "ESPHighlight"
                    highlight.Parent = player.Character
                    highlight.Adornee = player.Character
                    highlight.FillColor = Color3.new(1, 0, 0) -- Red color
                    highlight.FillTransparency = 0.5
                    highlight.OutlineColor = Color3.new(0, 0, 0) -- Black outline
                    highlight.OutlineTransparency = 0
                end
            elseif not teamCheckEnabled then
                -- If Team Check is off, show everyone
                local highlight = player.Character:FindFirstChild("ESPHighlight")
                if not highlight then
                    highlight = Instance.new("Highlight")
                    highlight.Name = "ESPHighlight"
                    highlight.Parent = player.Character
                    highlight.Adornee = player.Character
                    highlight.FillColor = Color3.new(1, 0, 0) -- Red color
                    highlight.FillTransparency = 0.5
                    highlight.OutlineColor = Color3.new(0, 0, 0) -- Black outline
                    highlight.OutlineTransparency = 0
                end
            end
        end
    end
end

-- Aimbot functionality to track and focus on the player's head closest to the center of the screen
local Camera = game.Workspace.CurrentCamera
local rightClickHeld = false

UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then -- Right-click for aimbot
        rightClickHeld = true
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then -- Right-click released
        rightClickHeld = false
        targetPlayer = nil -- Stop tracking
    end
end)

game:GetService("RunService").RenderStepped:Connect(function()
    -- ESP updates every second
    if espEnabled then
        highlightPlayers()
    end

    -- Aimbot functionality to track the target player's head closest to the center of the screen
    if aimbotEnabled and rightClickHeld then
        local closestPlayer = nil
        local closestDistance = math.huge
        local screenCenter = Camera.ViewportSize / 2

        -- Find the player whose head is closest to the center of the screen (crosshair)
        for _, player in pairs(game.Players:GetPlayers()) do
            -- Skip if player is the local player or if they are not on the team (if Team Check is enabled)
            if player ~= game.Players.LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
                if not teamCheckEnabled or player.Team ~= game.Players.LocalPlayer.Team then
                    local headPosition = player.Character.Head.Position
                    local screenPosition, onScreen = Camera:WorldToViewportPoint(headPosition)

                    -- Calculate the distance between the center of the screen and the player's head position
                    if onScreen then
                        local distanceToCenter = (Vector2.new(screenPosition.X, screenPosition.Y) - screenCenter).Magnitude

                        -- If this player is closer to the center, set them as the target
                        if distanceToCenter < closestDistance then
                            closestDistance = distanceToCenter
                            closestPlayer = player
                        end
                    end
                end
            end
        end

        -- If a target is found, aimbot will snap the mouse towards the player's head
        if closestPlayer then
            local targetHead = closestPlayer.Character.Head.Position
            local direction = (targetHead - Camera.CFrame.p).unit
            Camera.CFrame = Camera.CFrame * CFrame.new(direction * aimbotStrength)
        end
    end
end)

-- Toggle functionality for ESP, Aimbot, and Team Check
EspToggle.MouseButton1Click:Connect(function()
    espEnabled = not espEnabled
    EspToggle.Text = espEnabled and "Toggle ESP (On)" or "Toggle ESP (Off)"
end)

AimbotToggle.MouseButton1Click:Connect(function()
    aimbotEnabled = not aimbotEnabled
    AimbotToggle.Text = aimbotEnabled and "Toggle Aimbot (On)" or "Toggle Aimbot (Off)"
end)

TeamCheckToggle.MouseButton1Click:Connect(function()
    teamCheckEnabled = not teamCheckEnabled
    TeamCheckToggle.Text = teamCheckEnabled and "Team Check (On)" or "Team Check (Off)"
end)
