-- Dependencies
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- GUI Setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.CoreGui

-- Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 300, 0, 600)
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -300)--// Services
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

--// Variables
local AimbotEnabled = true
local ESPEnabled = true
local AimbotStrength = 0.5 -- Sensitivity for how quickly to aim at the target
local LeftControlHeld = false
local SpaceHeld = false -- For bunny hopping
local refreshRate = 1 -- seconds

--// BHop Function
local function BunnyHop()
    if SpaceHeld and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        local humanoid = LocalPlayer.Character.Humanoid
        if humanoid:GetState() == Enum.HumanoidStateType.Running then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            humanoid.WalkSpeed = 22 -- Set movement speed to 22
        else
            humanoid.WalkSpeed = 16 -- Reset to normal speed when not bunny hopping
        end
    end
end

--// ESP Function
local function CreateESP(player)
    local highlight = Instance.new("Highlight")
    highlight.Parent = player.Character
    highlight.Adornee = player.Character

    -- Set highlight color based on team
    if player.Team == LocalPlayer.Team then
        highlight.FillColor = Color3.fromRGB(0, 255, 0) -- Green for teammates
    else
        highlight.FillColor = Color3.fromRGB(255, 0, 0) -- Red for enemies
    end

    highlight.OutlineColor = Color3.fromRGB(0, 0, 0)
    highlight.Enabled = ESPEnabled

    -- Remove highlight when player leaves
    player.CharacterRemoving:Connect(function()
        highlight:Destroy()
    end)
    
    return highlight -- Return the highlight instance
end

--// Aimbot Function
local function Aimbot()
    if LeftControlHeld and AimbotEnabled then
        local closestPlayer = nil
        local closestDistance = math.huge

        for _, player in pairs(Players:GetPlayers()) do
            -- Check if the player is not the local player and has a character with a head
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
                -- Check for team and only aim at players not on the same team
                if player.Team ~= LocalPlayer.Team then
                    local targetPosition = player.Character.Head.Position + Vector3.new(0, 0.5, 0) -- Adjusting to aim at hair level
                    local screenPosition, onScreen = Camera:WorldToViewportPoint(targetPosition)

                    if onScreen then
                        local mousePosition = UserInputService:GetMouseLocation()
                        local distance = (Vector2.new(mousePosition.X, mousePosition.Y) - Vector2.new(screenPosition.X, screenPosition.Y)).Magnitude

                        if distance < closestDistance then
                            closestDistance = distance
                            closestPlayer = player
                        end
                    end
                end
            end
        end

        if closestPlayer then
            local targetPosition = closestPlayer.Character.Head.Position + Vector3.new(0, 0.5, 0) -- Aiming at hair level
            local cameraCFrame = CFrame.new(Camera.CFrame.Position, targetPosition)
            Camera.CFrame = cameraCFrame:Lerp(Camera.CFrame, AimbotStrength) -- Smooth transition
        end
    end
end

--// User Input Handlers
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.LeftControl then
        LeftControlHeld = true -- Left control held to enable aimbot
    elseif input.KeyCode == Enum.KeyCode.Space then
        SpaceHeld = true -- Space held for bunny hopping
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.LeftControl then
        LeftControlHeld = false -- Release left control to disable aimbot
    elseif input.KeyCode == Enum.KeyCode.Space then
        SpaceHeld = false -- Release space to stop bunny hopping
    end
end)

--// Run Service Loop
RunService.RenderStepped:Connect(function()
    Aimbot()
    BunnyHop()
end)

--// Setup ESP for all players and refresh highlights every second
local function RefreshESP()
    while wait(refreshRate) do
        for _, player in pairs(Players:GetPlayers()) do
            if player.Character then
                local highlight = player.Character:FindFirstChildOfClass("Highlight")
                if highlight then
                    -- Update highlight color based on team
                    if player.Team == LocalPlayer.Team then
                        highlight.FillColor = Color3.fromRGB(0, 255, 0) -- Green for teammates
                    else
                        highlight.FillColor = Color3.fromRGB(255, 0, 0) -- Red for enemies
                    end
                else
                    -- Create ESP if it doesn't exist
                    CreateESP(player)
                end
            end
        end
    end
end

--// Start the ESP refresh coroutine
coroutine.wrap(RefreshESP)()

--// Initial ESP setup for players
local function SetupPlayer(player)
    player.CharacterAdded:Connect(function(character)
        -- Wait for the character to fully load
        character:WaitForChild("Head")
        CreateESP(player) -- Create ESP for new player character
    end)

    if player.Character then
        CreateESP(player) -- Create ESP for existing character
    end
end

--// Setup ESP for players already in the game
for _, player in pairs(Players:GetPlayers()) do
    SetupPlayer(player)
end

--// Listen for new players
Players.PlayerAdded:Connect(function(player)
    SetupPlayer(player) -- Setup ESP for new players
end)

MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui

-- Dragging Functionality
local dragging = false
local dragStart, startPos
MainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
    end
end)
MainFrame.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)
MainFrame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

-- Title
local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 40)
Title.Text = "Game Utility GUI"
Title.Font = Enum.Font.SourceSansBold
Title.TextSize = 18
Title.TextColor3 = Color3.new(1, 1, 1)
Title.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
Title.Parent = MainFrame

-- Scrolling Frame for Options
local OptionsFrame = Instance.new("ScrollingFrame")
OptionsFrame.Size = UDim2.new(1, 0, 1, -40)
OptionsFrame.Position = UDim2.new(0, 0, 0, 40)
OptionsFrame.CanvasSize = UDim2.new(0, 0, 0, 2000) -- Enough height for all features
OptionsFrame.BackgroundTransparency = 1
OptionsFrame.ScrollBarThickness = 6
OptionsFrame.Parent = MainFrame

-- Utility Functions
local function CreateToggle(name, parent, callback)
    local Toggle = Instance.new("TextButton")
    Toggle.Size = UDim2.new(1, -10, 0, 30)
    Toggle.Position = UDim2.new(0, 5, 0, 0)
    Toggle.Text = name .. " [OFF]"
    Toggle.Font = Enum.Font.SourceSans
    Toggle.TextSize = 14
    Toggle.TextColor3 = Color3.fromRGB(200, 200, 200)
    Toggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    Toggle.Parent = parent

    local isOn = false
    Toggle.MouseButton1Click:Connect(function()
        isOn = not isOn
        Toggle.Text = name .. (isOn and " [ON]" or " [OFF]")
        callback(isOn)
    end)
end

local function CreateSlider(name, parent, min, max, callback)
    local SliderFrame = Instance.new("Frame")
    SliderFrame.Size = UDim2.new(1, -10, 0, 50)
    SliderFrame.Position = UDim2.new(0, 5, 0, 0)
    SliderFrame.BackgroundTransparency = 1
    SliderFrame.Parent = parent

    local SliderLabel = Instance.new("TextLabel")
    SliderLabel.Size = UDim2.new(1, -10, 0, 20)
    SliderLabel.Position = UDim2.new(0, 0, 0, 0)
    SliderLabel.Text = name .. ": " .. min
    SliderLabel.Font = Enum.Font.SourceSans
    SliderLabel.TextSize = 14
    SliderLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    SliderLabel.BackgroundTransparency = 1
    SliderLabel.Parent = SliderFrame

    local SliderBar = Instance.new("Frame")
    SliderBar.Size = UDim2.new(1, -10, 0, 10)
    SliderBar.Position = UDim2.new(0, 0, 1, -20)
    SliderBar.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    SliderBar.Parent = SliderFrame

    local SliderButton = Instance.new("Frame")
    SliderButton.Size = UDim2.new(0, 10, 1, 0)
    SliderButton.Position = UDim2.new(0, 0, 0, 0)
    SliderButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    SliderButton.Parent = SliderBar

    local dragging = false
    SliderButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)
    SliderButton.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    SliderButton.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local relativePos = math.clamp(input.Position.X - SliderBar.AbsolutePosition.X, 0, SliderBar.AbsoluteSize.X)
            SliderButton.Position = UDim2.new(0, relativePos, 0, 0)
            local value = math.floor(((relativePos / SliderBar.AbsoluteSize.X) * (max - min)) + min)
            SliderLabel.Text = name .. ": " .. value
            callback(value)
        end
    end)
end

-- Add all the requested features
local features = {
    "3D/2D Box", "Head Box", "Health & Armor Bar", "Tracers", "Skeleton ESP",
    "Chams & Glow", "Agent Name", "Weapon Name", "Distance", "Spike Info",
    "Perfect Aimbot", "No Spread", "pSilent Aimbot", "Auto Fire",
    "Aimlock", "Aim360", "Adjustable FOV", "Recoil Control", "Bunny Hop",
    "Spinbot", "Third Person", "Unlock Skins", "Skip Tutorial",
}

-- Loop through and create toggles for each feature
for _, feature in ipairs(features) do
    CreateToggle(feature, OptionsFrame, function(state)
        print(feature .. " is now " .. (state and "enabled" or "disabled"))
    end)
end
