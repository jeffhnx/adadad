--// Services
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

--// Variables
local AimbotEnabled = true
local ESPEnabled = true
local AimbotStrength = 0.5 -- Sensitivity for how quickly to aim at the target
local LeftControlHeld = false -- Left Control to activate aimbot
local SpaceHeld = false -- For bunny hopping
local refreshRate = 1 -- seconds
local BhopSpeed = 600 -- Bunny hop speed
local ESPDistance = 100 -- Distance for ESP visibility (in studs)
local LastKnownLocations = {} -- Tracks last known locations of enemies

--// BHop Function
local function BunnyHop()
    if SpaceHeld and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        local humanoid = LocalPlayer.Character.Humanoid
        if humanoid:GetState() == Enum.HumanoidStateType.Running then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            humanoid.WalkSpeed = BhopSpeed -- Set walk speed to 600 while bunny hopping
        else
            humanoid.WalkSpeed = 16 -- Default walk speed
        end
    end
end

--// ESP Function
local function CreateESP(player)
    local highlight = Instance.new("Highlight")
    highlight.Parent = player.Character
    highlight.Adornee = player.Character

    -- Set highlight properties
    highlight.FillColor = Color3.fromRGB(255, 0, 0) -- Red for enemies
    highlight.OutlineColor = Color3.fromRGB(0, 0, 0)
    highlight.Enabled = false -- Start as disabled

    return highlight
end

local function UpdateESP(player, highlight)
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end

    local enemyRoot = player.Character.HumanoidRootPart
    local distance = (enemyRoot.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude

    if distance <= ESPDistance then
        highlight.Enabled = ESPEnabled -- Enable ESP when within distance
        LastKnownLocations[player] = nil -- Reset last known location
    else
        highlight.Enabled = false -- Disable ESP when out of range
        -- Store last known location
        if not LastKnownLocations[player] then
            LastKnownLocations[player] = enemyRoot.Position
        end
    end
end

local function ShowLastKnownLocations()
    for player, position in pairs(LastKnownLocations) do
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local billboard = player.Character:FindFirstChild("LastLocationBillboard") or Instance.new("BillboardGui")
            billboard.Name = "LastLocationBillboard"
            billboard.Adornee = nil -- Set it to no specific part
            billboard.Size = UDim2.new(0, 200, 0, 50)
            billboard.StudsOffset = Vector3.new(0, 2, 0)
            billboard.AlwaysOnTop = true
            billboard.Parent = workspace
            -- Add text label to display "Last Known Location"
            local textLabel = billboard:FindFirstChild("TextLabel") or Instance.new("TextLabel")
            textLabel.Size = UDim2.new(1, 0, 1, 0)
            textLabel.BackgroundTransparency = 1
            textLabel.TextColor3 = Color3.new(1, 0, 0)
            textLabel.Text = "Last Known Location"
            textLabel.Parent = billboard
            -- Position it at the last known location
            billboard.Position = position
        end
    end
end

--// Aimbot Function
local function Aimbot()
    if LeftControlHeld and AimbotEnabled then
        local closestPlayer = nil
        local closestDistance = math.huge

        for _, player in pairs(Players:GetPlayers()) do
            -- Check if the player is not the local player and has a character with a head
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
                -- Check for team and only aim at players not on the same team
                if player.Team ~= LocalPlayer.Team then
                    local targetPosition = player.Character.Head.Position + Vector3.new(0, 0.5, 0) -- Adjusting to aim at hair level
                    local screenPosition, onScreen = Camera:WorldToViewportPoint(targetPosition)

                    if onScreen then
                        local mousePosition = UserInputService:GetMouseLocation()
                        local distance = (Vector2.new(mousePosition.X, mousePosition.Y) - Vector2.new(screenPosition.X, screenPosition.Y)).Magnitude

                        if distance < closestDistance then
                            closestDistance = distance
                            closestPlayer = player
                        end
                    end
                end
            end
        end

        if closestPlayer then
            local targetPosition = closestPlayer.Character.Head.Position + Vector3.new(0, 0.5, 0) -- Aiming at hair level
            local cameraCFrame = CFrame.new(Camera.CFrame.Position, targetPosition)
            Camera.CFrame = cameraCFrame:Lerp(Camera.CFrame, AimbotStrength) -- Smooth transition
        end
    end
end

--// User Input Handlers
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.LeftControl then
        LeftControlHeld = true -- Left control held to enable aimbot
    elseif input.KeyCode == Enum.KeyCode.Space then
        SpaceHeld = true -- Space held for bunny hopping
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.LeftControl then
        LeftControlHeld = false -- Release left control to disable aimbot
    elseif input.KeyCode == Enum.KeyCode.Space then
        SpaceHeld = false -- Release space to stop bunny hopping
    end
end)

--// Run Service Loop
RunService.RenderStepped:Connect(function()
    Aimbot()
    BunnyHop()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            local highlight = player.Character and player.Character:FindFirstChildOfClass("Highlight")
            if highlight then
                UpdateESP(player, highlight)
            end
        end
    end
    ShowLastKnownLocations()
end)

--// Setup ESP for all players and refresh highlights every second
local function SetupPlayer(player)
    player.CharacterAdded:Connect(function(character)
        -- Wait for the character to fully load
        character:WaitForChild("HumanoidRootPart")
        local highlight = CreateESP(player)
        UpdateESP(player, highlight)
    end)

    if player.Character then
        local highlight = CreateESP(player)
        UpdateESP(player, highlight)
    end
end

--// Setup ESP for players already in the game
for _, player in pairs(Players:GetPlayers()) do
    SetupPlayer(player)
end

--// Listen for new players
Players.PlayerAdded:Connect(function(player)
    SetupPlayer(player)
end)
