--// Services
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

--// Variables
local AimbotEnabled = true
local ESPEnabled = true
local BhopEnabled = true
local AimbotStrength = 0.5 -- Sensitivity for how quickly to aim at the target
local LeftControlHeld = false
local IsRunning = false
local refreshRate = 1 -- seconds
local CurrentWeapon = "Rifle" -- Default weapon
local MovementSpreadMultiplier = 2 -- Multiplier for spread when moving
local DebugEnabled = true -- Debug visuals for bullet correction
local WeaponSpread = {
    ["Pistol"] = 1.5,
    ["SMG"] = 3,
    ["Rifle"] = 2,
    ["Sniper"] = 0.5,
}

--// Function for Dynamic Bullet Spread
local function GetDynamicSpread()
    local baseSpread = WeaponSpread[CurrentWeapon] or 2
    local movementSpread = IsRunning and (baseSpread * MovementSpreadMultiplier) or baseSpread
    local spreadX = math.random(-movementSpread * 10, movementSpread * 10) / 100
    local spreadY = math.random(-movementSpread * 10, movementSpread * 10) / 100
    return Vector3.new(spreadX, spreadY, 0)
end

--// Debugging Function for Spread
local function DebugSpread(targetPosition, bulletSpread, correctedPosition)
    if DebugEnabled then
        local debugPart = Instance.new("Part")
        debugPart.Size = Vector3.new(0.2, 0.2, 0.2)
        debugPart.Shape = Enum.PartType.Ball
        debugPart.Material = Enum.Material.Neon
        debugPart.Anchored = true
        debugPart.CanCollide = false

        -- Actual spread position
        debugPart.Position = targetPosition + bulletSpread
        debugPart.BrickColor = BrickColor.new("Bright red")
        debugPart.Parent = workspace

        -- Corrected aim position
        local correctedPart = debugPart:Clone()
        correctedPart.Position = correctedPosition
        correctedPart.BrickColor = BrickColor.new("Bright green")
        correctedPart.Parent = workspace

        -- Remove after a short time
        game:GetService("Debris"):AddItem(debugPart, 1)
        game:GetService("Debris"):AddItem(correctedPart, 1)
    end
end

--// Aimbot Function
local function Aimbot()
    if LeftControlHeld and AimbotEnabled then
        local closestPlayer = nil
        local closestDistance = math.huge

        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
                if player.Team ~= LocalPlayer.Team then
                    local targetPosition = player.Character.Head.Position + Vector3.new(0, 0.5, 0)
                    local screenPosition, onScreen = Camera:WorldToViewportPoint(targetPosition)

                    if onScreen then
                        local mousePosition = UserInputService:GetMouseLocation()
                        local distance = (Vector2.new(mousePosition.X, mousePosition.Y) - Vector2.new(screenPosition.X, screenPosition.Y)).Magnitude

                        if distance < closestDistance then
                            closestDistance = distance
                            closestPlayer = player
                        end
                    end
                end
            end
        end

        if closestPlayer then
            local targetPosition = closestPlayer.Character.Head.Position + Vector3.new(0, 0.5, 0)
            local bulletSpread = GetDynamicSpread()
            local correctedPosition = targetPosition - bulletSpread -- Adjust aim for spread

            -- Smoothly adjust camera to corrected position
            local cameraCFrame = CFrame.new(Camera.CFrame.Position, correctedPosition)
            Camera.CFrame = cameraCFrame:Lerp(Camera.CFrame, AimbotStrength)

            -- Debug spread
            DebugSpread(targetPosition, bulletSpread, correctedPosition)
        end
    end
end

--// Bunny Hop Function
local function Bhop()
    if BhopEnabled and UserInputService:IsKeyDown(Enum.KeyCode.Space) and LocalPlayer.Character then
        local humanoid = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid and humanoid.FloorMaterial ~= Enum.Material.Air then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end

--// ESP Function
local function CreateESP(player)
    local highlight = Instance.new("Highlight")
    highlight.Parent = player.Character
    highlight.Adornee = player.Character

    -- Team color coding
    if player.Team == LocalPlayer.Team then
        highlight.FillColor = Color3.fromRGB(0, 255, 0) -- Green for teammates
    else
        highlight.FillColor = Color3.fromRGB(255, 0, 0) -- Red for enemies
    end

    highlight.OutlineColor = Color3.fromRGB(0, 0, 0)
    highlight.Enabled = ESPEnabled

    -- Remove ESP when the player leaves
    player.CharacterRemoving:Connect(function()
        highlight:Destroy()
    end)
end

--// Refresh ESP Periodically
local function RefreshESP()
    while wait(refreshRate) do
        for _, player in pairs(Players:GetPlayers()) do
            if player.Character then
                local highlight = player.Character:FindFirstChildOfClass("Highlight")
                if not highlight then
                    CreateESP(player)
                end
            end
        end
    end
end

--// Detect Key Events
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.LeftControl then
        LeftControlHeld = true
    elseif input.KeyCode == Enum.KeyCode.LeftShift then
        IsRunning = true
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.LeftControl then
        LeftControlHeld = false
    elseif input.KeyCode == Enum.KeyCode.LeftShift then
        IsRunning = false
    end
end)

--// Weapon Switching (Example)
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.One then
        CurrentWeapon = "Pistol"
    elseif input.KeyCode == Enum.KeyCode.Two then
        CurrentWeapon = "SMG"
    elseif input.KeyCode == Enum.KeyCode.Three then
        CurrentWeapon = "Rifle"
    elseif input.KeyCode == Enum.KeyCode.Four then
        CurrentWeapon = "Sniper"
    end
end)

--// Initial ESP Setup
for _, player in pairs(Players:GetPlayers()) do
    if player.Character then
        CreateESP(player)
    end
end
Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        wait(1) -- Wait for character to load
        CreateESP(player)
    end)
end)

--// Run Service Loop
RunService.RenderStepped:Connect(function()
    Aimbot()
    Bhop()
end)

--// Start ESP Refresh Coroutine
coroutine.wrap(RefreshESP)()
