--// Constants for Bullet Spread (Adjust as per weapon mechanics)
local BulletSpreadMin = 0.1  -- Minimum angle of bullet spread (in radians)
local BulletSpreadMax = 0.3  -- Maximum angle of bullet spread (in radians)

--// Variables for Aimbot and Mouse Movement
local UserInputService = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()

--// Function to Calculate Bullet Spread (Adjusted for Movement)
local function CalculateBulletSpread()
    -- Calculate a random spread direction based on BulletSpreadMin and BulletSpreadMax
    local spreadX = math.random() * (BulletSpreadMax - BulletSpreadMin) + BulletSpreadMin
    local spreadY = math.random() * (BulletSpreadMax - BulletSpreadMin) + BulletSpreadMin

    -- If the player is moving, increase the spread (simulate movement penalty)
    if LocalPlayer.Character:FindFirstChild("Humanoid") then
        local humanoid = LocalPlayer.Character.Humanoid
        if humanoid.WalkSpeed > 0 then
            spreadX = spreadX * 1.5  -- Increase spread when moving
            spreadY = spreadY * 1.5
        end
    end

    -- Return calculated spread (both X and Y)
    return Vector2.new(spreadX, spreadY)
end

--// Function to Adjust Mouse for Bullet Spread (Adjusted for Headshot)
local function AdjustMouseForBulletSpread(targetPosition)
    local spread = CalculateBulletSpread()

    -- Adjust the target position based on calculated bullet spread
    local predictedTargetX = targetPosition.X + spread.X * math.random(-1, 1)
    local predictedTargetY = targetPosition.Y + spread.Y * math.random(-1, 1)

    -- Move the mouse to the predicted location (where the bullet will land)
    Mouse.Move(predictedTargetX, predictedTargetY)
end

--// Function to Simulate Shooting Behavior (When Left Mouse Button is Held)
local function OnShoot()
    if UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) then
        -- Get the target position (could be the center of the screen or closest enemy)
        local target = Vector2.new(Mouse.X, Mouse.Y)  -- Example: targeting the mouse position

        -- Adjust the mouse to simulate where the bullet will go considering spread
        AdjustMouseForBulletSpread(target)

        -- Fire the shot (This would trigger the shot in an actual game)
        -- Note: In actual games, you would trigger the shot here (e.g. firing mechanism)
    end
end

--// Main Loop (Runs every frame)
game:GetService("RunService").Heartbeat:Connect(function()
    OnShoot()  -- Constantly check and adjust mouse when shooting
end)
