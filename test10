--// Services
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

--// Variables
local AimbotEnabled = true
local AimbotStrength = 0.5 -- Smoothness of aiming transition
local RightMouseHeld = false
local ArrowSpeed = 200 -- Initial speed of the arrow (studs per second)
local Gravity = Vector3.new(0, -196.2, 0) -- Roblox gravity (studs/second^2)

--// Function to Predict Trajectory with Gravity
local function PredictTrajectory(player)
    local character = player.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        local rootPart = character.HumanoidRootPart
        local playerVelocity = rootPart.AssemblyLinearVelocity -- Get the player's velocity
        local startPosition = Camera.CFrame.Position
        local targetPosition = rootPart.Position
        local distance = (targetPosition - startPosition).Magnitude
        local travelTime = distance / ArrowSpeed -- Initial estimate of travel time

        -- Account for player's movement during arrow travel
        local futurePosition = targetPosition + (playerVelocity * travelTime)

        -- Calculate trajectory adjustment for gravity
        local direction = (futurePosition - startPosition).Unit
        local gravityEffect = 0.5 * Gravity * travelTime^2 -- Gravity's effect on trajectory
        local adjustedPosition = futurePosition + gravityEffect

        return adjustedPosition
    end
    return nil
end

--// Aimbot Function
local function Aimbot()
    if RightMouseHeld and AimbotEnabled then
        local closestPlayer = nil
        local closestDistance = math.huge
        local targetPosition = nil

        for _, player in pairs(Players:GetPlayers()) do
            -- Check if the player is not the local player and has a character with a HumanoidRootPart
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                -- Check for team and only aim at players not on the same team
                if player.Team ~= LocalPlayer.Team then
                    local predictedPosition = PredictTrajectory(player)
                    if predictedPosition then
                        local screenPosition, onScreen = Camera:WorldToViewportPoint(predictedPosition)

                        if onScreen then
                            local mousePosition = UserInputService:GetMouseLocation()
                            local distance = (Vector2.new(mousePosition.X, mousePosition.Y) - Vector2.new(screenPosition.X, screenPosition.Y)).Magnitude

                            if distance < closestDistance then
                                closestDistance = distance
                                closestPlayer = player
                                targetPosition = predictedPosition
                            end
                        end
                    end
                end
            end
        end

        if closestPlayer and targetPosition then
            local cameraCFrame = CFrame.new(Camera.CFrame.Position, targetPosition)
            Camera.CFrame = cameraCFrame:Lerp(Camera.CFrame, AimbotStrength) -- Smooth transition
        end
    end
end

--// User Input for Right Mouse Button
UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then -- Right mouse button pressed
        RightMouseHeld = true
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then -- Right mouse button released
        RightMouseHeld = false
    end
end)

--// Run Service Loop
RunService.RenderStepped:Connect(function()
    Aimbot()
end)
