-- Define variables for ESP, aimbot, GUI visibility, aimbot strength, and custom key
local espEnabled = false
local aimbotEnabled = false
local guiVisible = false
local targetPlayer = nil
local refreshRate = 1 -- refresh every second for ESP
local aimbotStrength = 0.1 -- Default strength; lower is smoother
local aimbotKey = Enum.UserInputType.MouseButton2 -- Default to right-click

-- Create the GUI container
local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local EspToggle = Instance.new("TextButton")
local AimbotToggle = Instance.new("TextButton")
local SetAimbotKeyButton = Instance.new("TextButton")
local AimbotStrengthLabel = Instance.new("TextLabel")
local SliderBar = Instance.new("Frame")
local SliderHandle = Instance.new("Frame")

-- Configure the main GUI frame
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
MainFrame.Size = UDim2.new(0, 200, 0, 340)
MainFrame.Position = UDim2.new(0.5, -100, 0.5, -170)
MainFrame.Visible = guiVisible
MainFrame.Parent = ScreenGui

-- Configure ESP toggle button
EspToggle.Size = UDim2.new(0, 180, 0, 40)
EspToggle.Position = UDim2.new(0, 10, 0, 20)
EspToggle.Text = "Toggle ESP (Off)"
EspToggle.Parent = MainFrame

-- Configure Aimbot toggle button
AimbotToggle.Size = UDim2.new(0, 180, 0, 40)
AimbotToggle.Position = UDim2.new(0, 10, 0, 80)
AimbotToggle.Text = "Toggle Aimbot (Off)"
AimbotToggle.Parent = MainFrame

-- Configure Aimbot Strength Label
AimbotStrengthLabel.Size = UDim2.new(0, 180, 0, 20)
AimbotStrengthLabel.Position = UDim2.new(0, 10, 0, 140)
AimbotStrengthLabel.Text = "Aimbot Strength: 0.1"
AimbotStrengthLabel.TextColor3 = Color3.new(1, 1, 1)
AimbotStrengthLabel.Parent = MainFrame

-- Configure the Slider Bar
SliderBar.Size = UDim2.new(0, 180, 0, 10)
SliderBar.Position = UDim2.new(0, 10, 0, 170)
SliderBar.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
SliderBar.Parent = MainFrame

-- Configure the Slider Handle
SliderHandle.Size = UDim2.new(0, 10, 0, 20)
SliderHandle.Position = UDim2.new(0.1, -5, 0, 165)
SliderHandle.BackgroundColor3 = Color3.new(1, 0, 0)
SliderHandle.Parent = MainFrame
SliderHandle.ZIndex = 2

-- Configure the Set Aimbot Key button
SetAimbotKeyButton.Size = UDim2.new(0, 180, 0, 40)
SetAimbotKeyButton.Position = UDim2.new(0, 10, 0, 220)
SetAimbotKeyButton.Text = "Set Aimbot Key (Current: Right-click)"
SetAimbotKeyButton.Parent = MainFrame

-- Right-shift to show/hide GUI
local UserInputService = game:GetService("UserInputService")
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.RightShift then
        guiVisible = not guiVisible
        MainFrame.Visible = guiVisible
    end
end)

-- Update aimbot strength based on slider position
local function updateAimbotStrength()
    local relativePosition = (SliderHandle.Position.X.Offset - SliderBar.Position.X.Offset) / SliderBar.AbsoluteSize.X
    aimbotStrength = math.clamp(relativePosition, 0.1, 1)  -- Clamp values between 0.1 and 1
    AimbotStrengthLabel.Text = string.format("Aimbot Strength: %.2f", aimbotStrength)
end

-- Make the slider handle draggable
local dragging = false

SliderHandle.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local mouseX = input.Position.X
        local sliderBarX = SliderBar.AbsolutePosition.X
        local sliderBarWidth = SliderBar.AbsoluteSize.X
        
        -- Calculate the new position for the handle within the slider bar bounds
        local newHandleX = math.clamp(mouseX - sliderBarX, 0, sliderBarWidth)
        SliderHandle.Position = UDim2.new(0, newHandleX, 0, 165)
        
        -- Update the aimbot strength based on the new slider position
        updateAimbotStrength()
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

-- Set custom aimbot key functionality
SetAimbotKeyButton.MouseButton1Click:Connect(function()
    SetAimbotKeyButton.Text = "Press any key..."
    local connection
    connection = UserInputService.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Keyboard or input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.MouseButton2 then
            aimbotKey = input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode or input.UserInputType
            SetAimbotKeyButton.Text = "Set Aimbot Key (Current: " .. input.KeyCode.Name .. ")"
            connection:Disconnect() -- Stop listening for inputs after setting the key
        end
    end)
end)

-- ESP toggle button functionality
EspToggle.MouseButton1Click:Connect(function()
    espEnabled = not espEnabled
    EspToggle.Text = espEnabled and "Toggle ESP (On)" or "Toggle ESP (Off)"
    -- ESP functionality to highlight players
end)

-- Aimbot toggle button functionality
AimbotToggle.MouseButton1Click:Connect(function()
    aimbotEnabled = not aimbotEnabled
    AimbotToggle.Text = aimbotEnabled and "Toggle Aimbot (On)" or "Toggle Aimbot (Off)"
end)

-- Aimbot functionality with strength and custom key
local Camera = game.Workspace.CurrentCamera

UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == aimbotKey and aimbotEnabled then
        local closestPlayer, closestDistance = nil, math.huge
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= game.Players.LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
                local headPosition = player.Character.Head.Position
                local screenPoint = Camera:WorldToScreenPoint(headPosition)
                local distanceFromCursor = (Vector2.new(screenPoint.X, screenPoint.Y) - UserInputService:GetMouseLocation()).Magnitude
                if distanceFromCursor < closestDistance then
                    closestPlayer = player
                    closestDistance = distanceFromCursor
                end
            end
        end
        targetPlayer = closestPlayer
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == aimbotKey then
        targetPlayer = nil -- Stop tracking
    end
end)

game:GetService("RunService").RenderStepped:Connect(function()
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Head") then
        local targetPosition = targetPlayer.Character.Head.Position
        local direction = (targetPosition - Camera.CFrame.Position).Unit
        local smoothCFrame = Camera.CFrame:Lerp(CFrame.new(Camera.CFrame.Position, Camera.CFrame.Position + direction), aimbotStrength)
        Camera.CFrame = smoothCFrame
    end
end)
