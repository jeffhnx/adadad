--// Cache
local select = select
local pcall, getgenv, next, Vector2, mathclamp, type, mousemoverel = select(1, pcall, getgenv, next, Vector2.new, math.clamp, type, mousemoverel or (Input and Input.MouseMove))

--// Preventing Multiple Processes
pcall(function()
    getgenv().Aimbot.Functions:Exit()
end)

--// Environment
getgenv().Aimbot = {}
local Environment = getgenv().Aimbot

--// Services
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

--// Variables
local RequiredDistance, Typing, Running, Animation, ServiceConnections = 2000, false, false, nil, {}
local Power = 50 -- Default power value (1-100)

--// Script Settings
Environment.Settings = {
    Enabled = true,
    TeamCheck = false,
    AliveCheck = true,
    WallCheck = false, -- Laggy
    Sensitivity = 0, -- Animation length (in seconds) before fully locking onto target
    ThirdPerson = false, -- Uses mousemoverel instead of CFrame to support locking in third person (could be choppy)
    ThirdPersonSensitivity = 3, -- Boundary: 0.1 - 5
    TriggerKey = "MouseButton2",
    Toggle = false,
    LockPart = "Head" -- Body part to lock on
}

Environment.FOVSettings = {
    Enabled = false,
    Visible = false,
    Amount = 90,
    Color = Color3.fromRGB(255, 255, 255),
    LockedColor = Color3.fromRGB(255, 70, 70),
    Transparency = 0.5,
    Sides = 60,
    Thickness = 1,
    Filled = false
}

Environment.FOVCircle = Drawing.new("Circle")

--// GUI Creation
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local ToggleAimbot = Instance.new("TextButton")
local ToggleTeamCheck = Instance.new("TextButton")
local SensitivityLabel = Instance.new("TextLabel")
local SensitivitySlider = Instance.new("TextButton")
local PowerLabel = Instance.new("TextLabel")
local PowerSliderFrame = Instance.new("Frame")
local PowerSlider = Instance.new("Frame")
local PowerValueLabel = Instance.new("TextLabel")

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
Frame.Position = UDim2.new(0, 100, 0, 100)
Frame.Size = UDim2.new(0, 200, 0, 400)

ToggleAimbot.Parent = Frame
ToggleAimbot.Text = "Toggle Aimbot"
ToggleAimbot.Size = UDim2.new(0, 200, 0, 50)
ToggleAimbot.Position = UDim2.new(0, 0, 0, 0)
ToggleAimbot.MouseButton1Click:Connect(function()
    Environment.Settings.Enabled = not Environment.Settings.Enabled
    ToggleAimbot.Text = "Aimbot: " .. tostring(Environment.Settings.Enabled)
end)

ToggleTeamCheck.Parent = Frame
ToggleTeamCheck.Text = "Toggle TeamCheck"
ToggleTeamCheck.Size = UDim2.new(0, 200, 0, 50)
ToggleTeamCheck.Position = UDim2.new(0, 0, 0, 60)
ToggleTeamCheck.MouseButton1Click:Connect(function()
    Environment.Settings.TeamCheck = not Environment.Settings.TeamCheck
    ToggleTeamCheck.Text = "TeamCheck: " .. tostring(Environment.Settings.TeamCheck)
end)

SensitivityLabel.Parent = Frame
SensitivityLabel.Text = "Sensitivity"
SensitivityLabel.Size = UDim2.new(0, 200, 0, 50)
SensitivityLabel.Position = UDim2.new(0, 0, 0, 120)

SensitivitySlider.Parent = Frame
SensitivitySlider.Text = tostring(Environment.Settings.Sensitivity)
SensitivitySlider.Size = UDim2.new(0, 200, 0, 50)
SensitivitySlider.Position = UDim2.new(0, 0, 0, 180)
SensitivitySlider.MouseButton1Click:Connect(function()
    Environment.Settings.Sensitivity = Environment.Settings.Sensitivity + 0.1
    if Environment.Settings.Sensitivity > 1 then
        Environment.Settings.Sensitivity = 0
    end
    SensitivitySlider.Text = tostring(Environment.Settings.Sensitivity)
end)

-- Power Label
PowerLabel.Parent = Frame
PowerLabel.Text = "Power (1-100)"
PowerLabel.Size = UDim2.new(0, 200, 0, 50)
PowerLabel.Position = UDim2.new(0, 0, 0, 240)

-- Power Slider Frame
PowerSliderFrame.Parent = Frame
PowerSliderFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
PowerSliderFrame.Size = UDim2.new(0, 180, 0, 10)
PowerSliderFrame.Position = UDim2.new(0, 10, 0, 300)

-- Power Slider (Draggable part)
PowerSlider.Parent = PowerSliderFrame
PowerSlider.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
PowerSlider.Size = UDim2.new(Power / 100, 0, 1, 0)
PowerSlider.Position = UDim2.new(0, 0, 0, 0)

-- Power Value Label
PowerValueLabel.Parent = Frame
PowerValueLabel.Text = tostring(Power)
PowerValueLabel.Size = UDim2.new(0, 200, 0, 50)
PowerValueLabel.Position = UDim2.new(0, 0, 0, 320)

-- Function to update the Power based on slider position
local function UpdatePower(input)
    local newSize = math.clamp((input.Position.X - PowerSliderFrame.AbsolutePosition.X) / PowerSliderFrame.AbsoluteSize.X, 0, 1)
    Power = math.floor(newSize * 100)
    PowerSlider.Size = UDim2.new(newSize, 0, 1, 0)
    PowerValueLabel.Text = tostring(Power)
    
    -- Adjust Sensitivity or other attributes based on Power
    Environment.Settings.Sensitivity = Power / 100
end

-- Make the slider draggable
PowerSlider.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        local dragging = true
        local inputChanged

        inputChanged = UserInputService.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
                UpdatePower(input)
            end
        end)

        input.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = false
                inputChanged:Disconnect()
            end
        end)
    end
end)

--// Main Script Logic (Rest of your code)

local function CancelLock()
    Environment.Locked = nil
    if Animation then Animation:Cancel() end
    Environment.FOVCircle.Color = Environment.FOVSettings.Color
end

-- Load the script
Load()
