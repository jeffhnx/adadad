--// Services
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

--// Variables
local AimbotEnabled = true
local RightMouseHeld = false
local ArrowSpeed = 200 -- Speed of the arrow (studs per second)
local Gravity = 50 -- Simulated gravity affecting the arrow
local CrosshairOffset = Vector3.new(0, -1, 0) -- Offset for the crossbow line alignment

--// Function to Simulate Arrow Drop
local function SimulateProjectile(targetPosition, distance)
    local travelTime = distance / ArrowSpeed -- Time for the arrow to reach the target
    local drop = 0.5 * Gravity * (travelTime ^ 2) -- Vertical drop due to gravity

    -- Adjust target position for the drop
    return targetPosition - Vector3.new(0, drop, 0)
end

--// Function to Predict Enemy Position
local function PredictPosition(player)
    local character = player.Character
    if character and character:FindFirstChild("Head") then
        local head = character.Head
        local playerVelocity = head.AssemblyLinearVelocity -- Get the player's velocity
        local distance = (head.Position - Camera.CFrame.Position).Magnitude -- Distance to target
        local travelTime = distance / ArrowSpeed -- Time for the arrow to reach the target

        -- Predict the position based on the player's velocity and travel time
        local predictedPosition = head.Position + (playerVelocity * travelTime)
        local adjustedPosition = SimulateProjectile(predictedPosition, distance) -- Adjust for arrow drop
        return adjustedPosition, distance
    end
    return nil, nil
end

--// Aimbot Function
local function Aimbot()
    if RightMouseHeld and AimbotEnabled then
        local closestPlayer = nil
        local closestDistance = math.huge
        local targetPosition = nil

        for _, player in pairs(Players:GetPlayers()) do
            -- Check if the player is not the local player and has a character with a head
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
                -- Check for team and only aim at players not on the same team
                if player.Team ~= LocalPlayer.Team then
                    local predictedPosition, distance = PredictPosition(player)
                    if predictedPosition then
                        local screenPosition, onScreen = Camera:WorldToViewportPoint(predictedPosition + CrosshairOffset)

                        if onScreen then
                            local mousePosition = UserInputService:GetMouseLocation()
                            local distanceToCrosshair = (Vector2.new(mousePosition.X, mousePosition.Y) - Vector2.new(screenPosition.X, screenPosition.Y)).Magnitude

                            if distanceToCrosshair < closestDistance then
                                closestDistance = distanceToCrosshair
                                closestPlayer = player
                                targetPosition = predictedPosition
                            end
                        end
                    end
                end
            end
        end

        if closestPlayer and targetPosition then
            local cameraCFrame = CFrame.new(Camera.CFrame.Position, targetPosition)
            Camera.CFrame = cameraCFrame -- Lock onto target
        end
    end
end

--// User Input for Right Mouse Button
UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then -- Right mouse button pressed
        RightMouseHeld = true
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then -- Right mouse button released
        RightMouseHeld = false
    end
end)

--// Run Service Loop
RunService.RenderStepped:Connect(function()
    Aimbot()
end)
