--// Services and Variables
local UserInputService = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local RunService = game:GetService("RunService")

--// Bullet Spread Constants (Adjust based on weapon)
local BulletSpreadMin = 0.05 -- Minimum angle of bullet spread (in radians)
local BulletSpreadMax = 0.15 -- Maximum angle of bullet spread (in radians)

--// Aimbot Target Selection (Closest Target)
local function GetClosestTarget()
    local closestPlayer = nil
    local closestDistance = math.huge

    -- Loop through players to find the closest enemy
    for _, player in pairs(game:GetService("Players"):GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
            local targetPosition = player.Character.Head.Position
            local screenPosition, onScreen = Camera:WorldToViewportPoint(targetPosition)

            if onScreen then
                local mousePosition = Vector2.new(Mouse.X, Mouse.Y)
                local distance = (mousePosition - Vector2.new(screenPosition.X, screenPosition.Y)).Magnitude

                if distance < closestDistance then
                    closestDistance = distance
                    closestPlayer = player
                end
            end
        end
    end
    return closestPlayer
end

--// Function to Calculate Bullet Spread (Random Spread)
local function CalculateBulletSpread()
    local spreadX = math.random() * (BulletSpreadMax - BulletSpreadMin) + BulletSpreadMin
    local spreadY = math.random() * (BulletSpreadMax - BulletSpreadMin) + BulletSpreadMin
    return Vector2.new(spreadX, spreadY)
end

--// Adjusting Mouse for Bullet Spread
local function AdjustMouseForBulletSpread(targetPosition)
    -- Calculate bullet spread
    local spread = CalculateBulletSpread()

    -- Get the screen position of the target
    local screenPosition, onScreen = Camera:WorldToViewportPoint(targetPosition)
    if not onScreen then return end

    -- Adjust the screen position based on the spread
    local adjustedX = screenPosition.X + spread.X * math.random(-1, 1)
    local adjustedY = screenPosition.Y + spread.Y * math.random(-1, 1)

    -- Move the mouse to the adjusted position
    Mouse.Move(Vector2.new(adjustedX, adjustedY))
end

--// Function to Simulate Shooting Behavior (Left Mouse Button)
local function OnShoot()
    if UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) then
        local closestTarget = GetClosestTarget()
        if closestTarget and closestTarget.Character and closestTarget.Character:FindFirstChild("Head") then
            local targetPosition = closestTarget.Character.Head.Position
            AdjustMouseForBulletSpread(targetPosition)
        end
    end
end

--// Main Loop (Runs every frame)
RunService.RenderStepped:Connect(function()
    OnShoot()  -- Continuously adjust the mouse while shooting
end)
